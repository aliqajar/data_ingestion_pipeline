name: Weather System Pipeline CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build and run tests
        run: |
          docker compose build
          docker compose run --rm test
          
      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results/
          retention-days: 7

  lint:
    name: Lint Python Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort
          
      - name: Run linters
        run: |
          # Run flake8 for error checking
          flake8 services/ --count --select=E9,F63,F7,F82 --show-source --statistics
          
          # Check code formatting with black and isort
          black --check services/
          isort --check-only --profile black services/

# This workflow will fail if any of the jobs fail, preventing merges to main if the tests don't pass
# Status checks must be enabled in the GitHub repository settings for the protection to work 